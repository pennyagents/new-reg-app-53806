import { useState, useEffect } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { toast } from 'sonner';
interface Category {
  id: string;
  name_english: string;
  name_malayalam: string;
  description: string;
  actual_fee: number;
  offer_fee: number;
}
interface Panchayath {
  id: string;
  name: string;
  district: string;
}
interface RegistrationFormProps {
  category: Category;
  onSuccess: () => void;
}
const RegistrationForm = ({
  category,
  onSuccess
}: RegistrationFormProps) => {
  const [formData, setFormData] = useState({
    fullName: '',
    mobileNumber: '',
    address: '',
    panchayathId: '',
    ward: '',
    agent: '',
    preferenceId: ''
  });
  const [panchayaths, setPanchayaths] = useState<Panchayath[]>([]);
  const [categories, setCategories] = useState<Category[]>([]);
  const [loading, setLoading] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);
  const [generatedId, setGeneratedId] = useState('');
  useEffect(() => {
    fetchPanchayaths();
    fetchCategories();
  }, []);
  const fetchPanchayaths = async () => {
    const {
      data
    } = await supabase.from('panchayaths').select('*').eq('is_active', true).order('name');
    if (data) setPanchayaths(data);
  };
  const fetchCategories = async () => {
    const {
      data
    } = await supabase.from('categories').select('*').eq('is_active', true).order('name_english');
    if (data) setCategories(data);
  };
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!formData.fullName || !formData.mobileNumber || !formData.address || !formData.panchayathId || !formData.ward) {
      toast.error('Please fill in all required fields');
      return;
    }
    setLoading(true);
    try {
      const registrationData = {
        full_name: formData.fullName,
        mobile_number: formData.mobileNumber,
        address: formData.address,
        panchayath_id: formData.panchayathId || null,
        ward: formData.ward,
        agent: formData.agent || null,
        category_id: category.id,
        preference_category_id: formData.preferenceId || null,
        fee: category.offer_fee > 0 ? category.offer_fee : category.actual_fee,
        customer_id: '' // Will be generated by trigger
      };
      const {
        data,
        error
      } = await supabase.from('registrations').insert(registrationData).select().single();
      if (error) {
        if (error.code === '23505') {
          toast.error('This mobile number is already registered');
        } else {
          toast.error('Registration failed. Please try again.');
        }
      } else {
        setGeneratedId(data.customer_id);
        setShowSuccess(true);
      }
    } catch (error) {
      toast.error('Registration failed. Please try again.');
    } finally {
      setLoading(false);
    }
  };
  const handleSuccessClose = () => {
    setShowSuccess(false);
    onSuccess();
  };
  return <>
      <form onSubmit={handleSubmit} className="space-y-6">
        <div className="space-y-2">
          <Label htmlFor="fullName">Full Name * / പൂർണ്ണ നാമം *</Label>
          <Input id="fullName" value={formData.fullName} onChange={e => setFormData({
          ...formData,
          fullName: e.target.value
        })} required />
        </div>

        <div className="space-y-2">
          <Label htmlFor="mobileNumber">Mobile Number * / മൊബൈൽ നമ്പർ *</Label>
          <Input id="mobileNumber" type="tel" value={formData.mobileNumber} onChange={e => setFormData({
          ...formData,
          mobileNumber: e.target.value
        })} required />
        </div>

        <div className="space-y-2">
          <Label htmlFor="address">Address * / വിലാസം *</Label>
          <Textarea id="address" value={formData.address} onChange={e => setFormData({
          ...formData,
          address: e.target.value
        })} required />
        </div>

        <div className="space-y-2">
          <Label htmlFor="panchayath">Panchayath * / പഞ്ചായത്ത് *</Label>
          <Select value={formData.panchayathId} onValueChange={value => setFormData({
          ...formData,
          panchayathId: value
        })} required>
            <SelectTrigger>
              <SelectValue placeholder="Select Panchayath" />
            </SelectTrigger>
            <SelectContent>
              {panchayaths.map(panchayath => <SelectItem key={panchayath.id} value={panchayath.id}>
                  {panchayath.name} - {panchayath.district}
                </SelectItem>)}
            </SelectContent>
          </Select>
        </div>

        <div className="space-y-2">
          <Label htmlFor="ward">Ward * / വാർഡ് *</Label>
          <Input id="ward" value={formData.ward} onChange={e => setFormData({
          ...formData,
          ward: e.target.value
        })} required />
        </div>

        <div className="space-y-2">
          <Label htmlFor="agent">Agent / P.R.O / ഏജന്റ് / പി.ആർ.ഒ (optional)</Label>
          <Input id="agent" value={formData.agent} onChange={e => setFormData({
          ...formData,
          agent: e.target.value
        })} />
        </div>

        {category.name_english === 'Job Card (Special)' && <div className="space-y-2">
            <Label htmlFor="preference">Preference Category</Label>
            <Select value={formData.preferenceId} onValueChange={value => setFormData({
          ...formData,
          preferenceId: value
        })}>
              <SelectTrigger>
                <SelectValue placeholder="Select Preference" />
              </SelectTrigger>
              <SelectContent>
                {categories.map(cat => <SelectItem key={cat.id} value={cat.id}>
                    {cat.name_english} / {cat.name_malayalam}
                  </SelectItem>)}
              </SelectContent>
            </Select>
          </div>}

        <Button type="submit" disabled={loading} className="w-full" size="lg">
          {loading ? 'Submitting...' : 'Submit Registration'}
        </Button>
      </form>

      <Dialog open={showSuccess} onOpenChange={handleSuccessClose}>
        <DialogContent className="max-w-md">
          <DialogHeader>
            <DialogTitle className="text-center text-2xl">Congratulations!</DialogTitle>
          </DialogHeader>
          <div className="text-center space-y-4">
            <p className="text-lg">നിങ്ങളുടെ രജിസ്ട്രേഷൻ വിജയകരമായി സമർപ്പിച്ചു!</p>
            <div className="bg-primary/10 border border-primary rounded-lg p-4">
              <p className="font-semibold">Your Customer ID:</p>
              <p className="text-2xl font-bold text-primary">{generatedId}</p>
            </div>
            <p className="text-sm text-muted-foreground">
              Please save this ID for future reference. You can use it to check your registration status.
            </p>
            <Button onClick={handleSuccessClose} className="w-full">
              Close
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    </>;
};
export default RegistrationForm;